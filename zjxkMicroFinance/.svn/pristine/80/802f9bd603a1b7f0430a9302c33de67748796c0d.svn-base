package com.yzframework.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.alibaba.fastjson.JSON;
import com.yzframework.base.AjaxDone;
import com.yzframework.base.JbpmBase;
import com.yzframework.model.ZLoanForm;
import com.yzframework.service.ZLoanFormService;

@Controller
@RequestMapping("/views/LoanForm")
public class ZLoanFormController extends JbpmBase {

    protected final Log logger = LogFactory.getLog(getClass());

    @Resource
    private ZLoanFormService zLoanFormService;
    
	@RequestMapping("/new")
	public ModelAndView add() throws Exception {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("zLoanFormNew");

		return mav;
	}
	
	@RequestMapping("/edit/{taskId}/{id}")
	public ModelAndView edit(@PathVariable String taskId, @PathVariable String id) throws Exception {
		ModelAndView mav = new ModelAndView();
		ZLoanForm model = zLoanFormService.findById(id);
		
		mav.addObject("model", model);
		mav.addObject("taskId", taskId);
		mav.setViewName("zLoanFormEdit");

		return mav;
	}
	
	@RequestMapping("/show/{id}")
	public ModelAndView show(@PathVariable String id) throws Exception {
		
		ZLoanForm model = zLoanFormService.findById(id);
		
		ModelAndView mav = new ModelAndView();
		mav.addObject("model", model);
		mav.setViewName("zLoanFormShow");

		return mav;
	}
	
	@RequestMapping("/save")
	@ResponseBody
	public String save(ZLoanForm model,String navTabId, HttpSession session) throws Exception {
		AjaxDone ajaxDone = new AjaxDone();
		try{
			zLoanFormService.save(model);
			super.createAndStartProcess("LoanProcess", (String)session.getAttribute("CURRENT_USER"), model.getId());
	       
			ajaxDone.setStatusCode(AjaxDone.SUCCESS);
		}catch(Exception e){
	        logger.error(null, e);
			ajaxDone.setStatusCode(AjaxDone.FAIL);
			ajaxDone.setMessage(AjaxDone.FAIL_MSG);
		}
		
		return JSON.toJSONString(ajaxDone);
	}
	
	@RequestMapping("/update")
	@ResponseBody
	public String update(ZLoanForm model, String taskId, HttpSession session) throws Exception {
		AjaxDone ajaxDone = new AjaxDone();
		try{
			super.startAndCompleteTask(taskId, (String)session.getAttribute("CURRENT_USER"), "通过");
	       
			ajaxDone.setStatusCode(AjaxDone.SUCCESS);
		}catch(Exception e){
	        logger.error(null, e);
			ajaxDone.setStatusCode(AjaxDone.FAIL);
			ajaxDone.setMessage(AjaxDone.FAIL_MSG);
		}
		
		return JSON.toJSONString(ajaxDone);
	}

}
