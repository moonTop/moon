package com.yzframework.controller;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.yzframework.base.ActionContext;
import com.yzframework.base.Constant;
import com.yzframework.base.SessionInfo;
import com.yzframework.model.Muser;
import com.yzframework.service.MuserService;
import com.yzframework.utils.CommonUtil;
import com.yzframework.utils.PasswordUtil;

/**
 * @author Administrator
 * 
 */
@Controller
public class LoginController {
    protected final Log logger = LogFactory.getLog(getClass());

    @Resource
    private MuserService muserService;
    
    /**
     * 退出系统
     * @return
     * @throws Exception
     */
    @RequestMapping("logon")
    public ModelAndView logon() throws Exception {
        ModelAndView mav = new ModelAndView();
        mav.setViewName("login");

        return mav;
    }
    
    /**
     * 用户登录验证
     * 
     * @param userid
     * @param password
     * @param request
     * @param session
     * @return
     * @throws Exception
     */
    @RequestMapping("login")
	public ModelAndView loginValidate(String userid, String password,
			HttpServletRequest request, HttpSession session) throws Exception {
    	
		ModelAndView mav = new ModelAndView();
		mav.addObject("userid", userid);
		session.setAttribute("CURRENT_USER", userid);

		// 判断当前登录用户是否存在
        Muser muser = new Muser();
        muser.setUserid(userid);
        List<Muser> list = muserService.find01(muser);
        if (list.size() <= 0) {
            mav.addObject("errmsg", "帐号不存在");
            return mav;
        }
        Muser user = list.get(0);
        // 检查密码
//        if (!PasswordUtil.validatePassword(user.getPassword(), password)) {
//            mav.addObject("errmsg", "密码不正确");
//            return mav;
//        }

        // 根据登录帐号判断用户是否登录
        ServletContext application = session.getServletContext();
        @SuppressWarnings("unchecked")
        HashSet<HttpSession> logonUserSessions = (HashSet<HttpSession>) application.getAttribute("logonUserSessions");
        outline(user.getUserid(), session, logonUserSessions);

        // 将登录用户信息存入到SESSION
        SessionInfo sessioninfo = ActionContext.getSession();
        sessioninfo.setUserid(user.getUserid());
        sessioninfo.setUserUUid(user.getId());
        sessioninfo.setIp(CommonUtil.getIp(request));
        session.setAttribute(Constant.SSESION_INFO, sessioninfo);
        ActionContext.setSession(sessioninfo);
        
        session.setAttribute("userId", userid);
        
        // =========登录用户SESSION管理================ //
        if (logonUserSessions == null) {
            logonUserSessions = new HashSet<HttpSession>();
            application.setAttribute("logonUserSessions", logonUserSessions);
        }
        logonUserSessions.add(session);
        logger.info("用户登录,用户名="+session.getAttribute("userId"));

        mav = new ModelAndView("redirect:/views/loadMain.do");

        return mav;
    }
    
    /**
     * 根据用户登录的帐号和密码信息判断用户是否存在，是否在线等信息
     * @param userid
     * @param session
     * @param sessions
     */
    private void outline(String userid, HttpSession session, HashSet<HttpSession> sessions){
        if (sessions == null){
            return;
        }
        Iterator<HttpSession> it = sessions.iterator();
        while(it.hasNext()){
            HttpSession insession = it.next();
            if (userid.equals(insession.getAttribute("userId")) && session != insession) {
                insession.invalidate();
            }
        }
    }

}